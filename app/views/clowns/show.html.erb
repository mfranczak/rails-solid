<img src="<%= @clown.image %>" class="img-circle circle-l" alt="<%= @clown.name %>">

<h1>
  <%= @clown.name %>
</h1>

<% if @clown.is_student? %>
<p>
    <span class="label label-info">student</span>
</p>
<% end %>


<% # [LOD] Demeter Law is violated here. %>
<% # We can fix the problem using Decorator pattern and delegates %>
<% # Check the Presentation::Clown object. %>
<% # It should decorate a clown object and delegate missing methods to decorated class %>
<% # Use the Presentation::Clown.last_booking instead of chain of calls inside the template %>
<% # https://robots.thoughtbot.com/always-define-respond-to-missing-when-overriding %>
<% unless @clown.bookings.empty? %>
    <p>Last booking was on <%= @clown.bookings.last.created_at.strftime('%e.%-m.%Y') %></p>
<% end %>

<% # [LSP] Remove the conditions once Clown#ranking_data is fixed %>

<p>Points <span class="badge"><%= @clown.ranking_data.points %></p>
<p>Bookings <span class="badge"><%= @clown.ranking_data.bookings %></p>

<span class="separator"></span>

<h3>Book this clown</h3>

<%= simple_form_for @booking do |f| %>
    <%= f.input :appointment_date %>
    <%= f.input :appointment_time, as: :select, collection: Booking::APPOINTMENT_TIME %>
    <%= f.input :clown_id, as: :hidden %>
    <%= f.submit 'Book', {class: 'btn btn-default'} %>
<% end %>